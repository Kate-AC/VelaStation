import { css } from 'styled-components';
import { CSSProp } from 'styled-components';
import { breakPoints } from 'styles/variables';

type DeviceType = 'uxga' | 'wxga' |'xga' | 'tablet' | 'vga' | 'phone';

const mediaDown = (device: DeviceType, content: CSSProp): CSSProp => {
  if (device == 'uxga') {
    return css`
      @media only screen and (max-width: ${breakPoints.uxga}px) {
        ${content}
      }
    `;
  }

  if (device == 'wxga') {
    return css`
      @media only screen and (max-width: ${breakPoints.wxga}px) {
        ${content}
      }
    `;
  }

  if (device == 'xga') {
    return css`
      @media only screen and (max-width: ${breakPoints.xga}px) {
        ${content}
      }
    `;
  }

  if (device == 'tablet') {
    return css`
      @media only screen and (max-width: ${breakPoints.tablet}px) {
        ${content}
      }
    `;
  }

  if (device == 'vga') {
    return css`
      @media only screen and (max-width: ${breakPoints.vga}px) {
        ${content}
      }
    `;
  }

  if (device == 'phone') {
    return css`
      @media only screen and (max-width: ${breakPoints.phone}px) {
        ${content}
      }
    `;
  }

  return css``;
};

const random = (min: number, max: number): number => {
  return Math.random() * (max - min) + min;
}

const rgbScramble = (name: string) => {
  const animationDuration: number = 1; 
  const glitchFrequency: number = 50;
  const glitchInterval: number = random(0, 6);

  const animationName: string = 'rgbScramble' + name;
  const transformList: string[] = [];

  for (let i: number = 0; i < glitchFrequency; i++) {
    const percent: number = i * glitchInterval;
    transformList.push(`
      ${percent + '%'} {
        transform: translate(${random(-1, 1) + '%'}, ${random(-0.5, 0.5) + '%'});
      }
    `);
  }

  return css`
    @keyframes ${animationName} {
      ${transformList.map((item: string) => item)}
    }

    animation: ${animationName} ${animationDuration + 's'} steps(1, jump-end) infinite alternate both;
  `;    
}

const glitch = (name: string) => {
  const animationDuration: number = 0.8;
  const glitchFrequency: number = 50;
  const glitchInterval: number = random(0, 6);

  const animationName: string = 'glitch' + name;
  const list: string[] = [];

  for (let i = 0; i < glitchFrequency; i++) {
    var left: number = 0;
    var right: number = 100;
    var top: number = random(0, 90);
    var bottom: number = top + random(1, 10);

    const percent: number = i * glitchInterval;

    list.push(`
      ${percent + '%'} {
        clip-path: polygon(
          ${left + '%'} ${top + '%'},
          ${right + '%'} ${top + '%'},
          ${right + '%'} ${bottom + '%'},
          ${left + '%'} ${bottom + '%'}
        );
        transform: translate(
          ${random(-8, 8) + '%'},
          ${random(-5, 5) + '%'}
        );
      }
    `);
  }

  return css`
    @keyframes ${animationName} {
      ${list.map((item: string) => item)}
    }
    animation: ${animationName} ${animationDuration + 's'} linear infinite alternate both;
  `; 
} 

const fixedGlitchBefore = css`
@keyframes glitchBefore {
  0% {
    clip-path: polygon(
      0% 72.17799053763028%,
      100% 72.17799053763028%,
      100% 78.81522525641634%,
      0% 78.81522525641634%
    );
    transform: translate(
      3.343162241708182%,
      -2.9241202771488606%
    );
  }
  5.82515374241469% {
    clip-path: polygon(
      0% 87.78621707688076%,
      100% 87.78621707688076%,
      100% 91.40979141943947%,
      0% 91.40979141943947%
    );
    transform: translate(
      7.562744692518315%,
      2.990636225704188%
    );
  }
  11.65030748482938% {
    clip-path: polygon(
      0% 35.59969763827198%,
      100% 35.59969763827198%,
      100% 38.005435395835335%,
      0% 38.005435395835335%
    );
    transform: translate(
      4.9541522113934136%,
      -0.3643130293243857%
    );
  }
  17.475461227244068% {
    clip-path: polygon(
      0% 52.27345639604446%,
      100% 52.27345639604446%,
      100% 61.319282025083666%,
      0% 61.319282025083666%
    );
    transform: translate(
      -2.3801018483765297%,
      2.928482851870358%
    );
  }
  23.30061496965876% {
    clip-path: polygon(
      0% 21.238854133150873%,
      100% 21.238854133150873%,
      100% 30.966678644831767%,
      0% 30.966678644831767%
    );
    transform: translate(
      -0.17596869901489143%,
      -1.103055595041409%
    );
  }
  29.12576871207345% {
    clip-path: polygon(
      0% 86.46914990560262%,
      100% 86.46914990560262%,
      100% 89.01331452441991%,
      0% 89.01331452441991%
    );
    transform: translate(
      -0.05283044839246642%,
      4.127834725220454%
    );
  }
  34.950922454488136% {
    clip-path: polygon(
      0% 83.68788747355234%,
      100% 83.68788747355234%,
      100% 89.71964349313023%,
      0% 89.71964349313023%
    );
    transform: translate(
      -0.3718622091870003%,
      -0.2858799066788231%
    );
  }
  40.77607619690283% {
    clip-path: polygon(
      0% 72.62022755008401%,
      100% 72.62022755008401%,
      100% 80.50046001919486%,
      0% 80.50046001919486%
    );
    transform: translate(
      2.261618920010335%,
      -1.190388174193635%
    );
  }
  46.60122993931752% {
    clip-path: polygon(
      0% 87.58969441510595%,
      100% 87.58969441510595%,
      100% 96.53078348055135%,
      0% 96.53078348055135%
    );
    transform: translate(
      -4.217719761601462%,
      0.6447187712969509%
    );
  }
  52.42638368173221% {
    clip-path: polygon(
      0% 69.46934665833831%,
      100% 69.46934665833831%,
      100% 74.86084504219056%,
      0% 74.86084504219056%
    );
    transform: translate(
      0.5056499346567591%,
      -0.19388012602864269%
    );
  }
  58.2515374241469% {
    clip-path: polygon(
      0% 62.00462861574449%,
      100% 62.00462861574449%,
      100% 70.65466860583274%,
      0% 70.65466860583274%
    );
    transform: translate(
      6.7749109687790074%,
      2.05306471065348%
    );
  }
  64.07669116656159% {
    clip-path: polygon(
      0% 75.6966865690664%,
      100% 75.6966865690664%,
      100% 85.02280468410954%,
      0% 85.02280468410954%
    );
    transform: translate(
      -6.772754370045089%,
      2.819128294307987%
    );
  }
  69.90184490897627% {
    clip-path: polygon(
      0% 56.35365647191101%,
      100% 56.35365647191101%,
      100% 61.345182707366334%,
      0% 61.345182707366334%
    );
    transform: translate(
      2.614415109823174%,
      -3.657904891184871%
    );
  }
  75.72699865139097% {
    clip-path: polygon(
      0% 60.59318471011384%,
      100% 60.59318471011384%,
      100% 69.26634347046871%,
      0% 69.26634347046871%
    );
    transform: translate(
      3.1546492903119443%,
      3.8344687692536183%
    );
  }
  81.55215239380566% {
    clip-path: polygon(
      0% 49.93644334923109%,
      100% 49.93644334923109%,
      100% 53.810801785752695%,
      0% 53.810801785752695%
    );
    transform: translate(
      4.232444975077218%,
      -3.9721852158662085%
    );
  }
  87.37730613622035% {
    clip-path: polygon(
      0% 50.89416810690304%,
      100% 50.89416810690304%,
      100% 51.999677130047594%,
      0% 51.999677130047594%
    );
    transform: translate(
      -4.081747670041839%,
      -1.3170666807670028%
    );
  }
  93.20245987863504% {
    clip-path: polygon(
      0% 34.07888174419081%,
      100% 34.07888174419081%,
      100% 38.52653673765102%,
      0% 38.52653673765102%
    );
    transform: translate(
      3.5099310490439457%,
      -0.28210683262147107%
    );
  }
  99.02761362104972% {
    clip-path: polygon(
      0% 57.01345738439054%,
      100% 57.01345738439054%,
      100% 59.10955580170923%,
      0% 59.10955580170923%
    );
    transform: translate(
      -2.010845401625371%,
      -3.951561031113573%
    );
  }
}

animation: glitchBefore 0.8s linear infinite alternate both;
`;

const fixedGlitchAfter = css`
@keyframes glitchAfter {
  0% {
    clip-path: polygon(
      0% 43.06929161482247%,
      100% 43.06929161482247%,
      100% 47.78386342730546%,
      0% 47.78386342730546%
    );
    transform: translate(
      4.349866780514127%,
      3.6974846445896343%
    );
  }
  4.820185275451156% {
    clip-path: polygon(
      0% 35.3659289928753%,
      100% 35.3659289928753%,
      100% 40.84340355595348%,
      0% 40.84340355595348%
    );
    transform: translate(
      5.965610062251585%,
      3.56185970375995%
    );
  }
  9.640370550902311% {
    clip-path: polygon(
      0% 57.70695047567835%,
      100% 57.70695047567835%,
      100% 67.60169577450917%,
      0% 67.60169577450917%
    );
    transform: translate(
      -1.913068352227743%,
      -4.240909148737426%
    );
  }
  14.460555826353467% {
    clip-path: polygon(
      0% 67.34328177640218%,
      100% 67.34328177640218%,
      100% 72.0903253833018%,
      0% 72.0903253833018%
    );
    transform: translate(
      5.931017011341574%,
      -3.3384649503384867%
    );
  }
  19.280741101804622% {
    clip-path: polygon(
      0% 13.471285571165637%,
      100% 13.471285571165637%,
      100% 15.664759337960685%,
      0% 15.664759337960685%
    );
    transform: translate(
      -5.010457691073448%,
      -4.050604000617055%
    );
  }
  24.100926377255778% {
    clip-path: polygon(
      0% 80.07022436312559%,
      100% 80.07022436312559%,
      100% 87.39374806844175%,
      0% 87.39374806844175%
    );
    transform: translate(
      -5.8690882770101815%,
      3.7165383197626056%
    );
  }
  28.921111652706934% {
    clip-path: polygon(
      0% 16.025370759727547%,
      100% 16.025370759727547%,
      100% 21.57641690106975%,
      0% 21.57641690106975%
    );
    transform: translate(
      -5.066096290248645%,
      0.6004871468391855%
    );
  }
  33.74129692815809% {
    clip-path: polygon(
      0% 72.07822420648829%,
      100% 72.07822420648829%,
      100% 81.6205499665828%,
      0% 81.6205499665828%
    );
    transform: translate(
      2.8965121630628055%,
      -2.1790181632067585%
    );
  }
  38.561482203609245% {
    clip-path: polygon(
      0% 69.34624104143037%,
      100% 69.34624104143037%,
      100% 72.31916746472011%,
      0% 72.31916746472011%
    );
    transform: translate(
      6.5008203190863725%,
      -3.5852277829959722%
    );
  }
  43.3816674790604% {
    clip-path: polygon(
      0% 7.684977842437162%,
      100% 7.684977842437162%,
      100% 8.760240844535323%,
      0% 8.760240844535323%
    );
    transform: translate(
      0.6518299399728065%,
      2.7355054687136082%
    );
  }
  48.201852754511556% {
    clip-path: polygon(
      0% 6.5469006758404085%,
      100% 6.5469006758404085%,
      100% 10.684475346156386%,
      0% 10.684475346156386%
    );
    transform: translate(
      2.4042910176665053%,
      -4.742748765903377%
    );
  }
  53.022038029962715% {
    clip-path: polygon(
      0% 57.43492499752784%,
      100% 57.43492499752784%,
      100% 59.476547693872675%,
      0% 59.476547693872675%
    );
    transform: translate(
      1.5480139719727788%,
      3.8179819511733637%
    );
  }
  57.84222330541387% {
    clip-path: polygon(
      0% 56.28904061656465%,
      100% 56.28904061656465%,
      100% 59.58307605497737%,
      0% 59.58307605497737%
    );
    transform: translate(
      -2.0442528867269587%,
      3.818701504645187%
    );
  }
  62.66240858086502% {
    clip-path: polygon(
      0% 54.14375935156082%,
      100% 54.14375935156082%,
      100% 62.472076521269415%,
      0% 62.472076521269415%
    );
    transform: translate(
      0.46797523687058984%,
      3.9768048504213045%
    );
  }
  67.48259385631619% {
    clip-path: polygon(
      0% 60.93437946834442%,
      100% 60.93437946834442%,
      100% 62.49567277358866%,
      0% 62.49567277358866%
    );
    transform: translate(
      7.58634826371496%,
      -2.26158298296254%
    );
  }
  72.30277913176734% {
    clip-path: polygon(
      0% 34.93140428047069%,
      100% 34.93140428047069%,
      100% 44.18878730518456%,
      0% 44.18878730518456%
    );
    transform: translate(
      -2.03121979358691%,
      3.3139006873138257%
    );
  }
  77.12296440721849% {
    clip-path: polygon(
      0% 78.0462027153991%,
      100% 78.0462027153991%,
      100% 86.32465343876925%,
      0% 86.32465343876925%
    );
    transform: translate(
      -7.892113734279317%,
      1.7861205621762766%
    );
  }
  81.94314968266964% {
    clip-path: polygon(
      0% 49.857975469708016%,
      100% 49.857975469708016%,
      100% 51.7079698881271%,
      0% 51.7079698881271%
    );
    transform: translate(
      -3.4650118541024497%,
      -0.8008930279655164%
    );
  }
  86.7633349581208% {
    clip-path: polygon(
      0% 69.27828207129869%,
      100% 69.27828207129869%,
      100% 79.09383334958515%,
      0% 79.09383334958515%
    );
    transform: translate(
      -6.7556740332264695%,
      2.357346217346416%
    );
  }
  91.58352023357196% {
    clip-path: polygon(
      0% 22.243168468723205%,
      100% 22.243168468723205%,
      100% 23.345722738648778%,
      0% 23.345722738648778%
    );
    transform: translate(
      -6.749187158960169%,
      2.3422118141834485%
    );
  }
  96.40370550902311% {
    clip-path: polygon(
      0% 2.671948577804797%,
      100% 2.671948577804797%,
      100% 4.146329097810791%,
      0% 4.146329097810791%
    );
    transform: translate(
      5.977086702531199%,
      1.9629554478971523%
    );
  }
}

animation: glitchAfter 0.8s linear infinite alternate both;
`;

const fixedRgbScranbleR = css`
@keyframes rgbScrambleR {
  0% {
    transform: translate(-0.7041593858605659%, -0.0740587686931875%);
  }
  1.8260974110991364% {
    transform: translate(0.300736888001798%, -0.3235767007017676%);
  }
  3.6521948221982727% {
    transform: translate(-0.798599821909554%, -0.06795330603212224%);
  }
  5.4782922332974096% {
    transform: translate(-0.23056624352076893%, -0.34998248028233103%);
  }
  7.3043896443965455% {
    transform: translate(0.0515906238066175%, -0.05731823216991816%);
  }
  9.130487055495681% {
    transform: translate(-0.27764805057292774%, -0.44591937913040036%);
  }
  10.956584466594819% {
    transform: translate(-0.8200854597038574%, 0.15549620849537038%);
  }
  12.782681877693955% {
    transform: translate(-0.05740456987669296%, -0.09478620028660467%);
  }
  14.608779288793091% {
    transform: translate(-0.22824466431462254%, -0.14983780830368998%);
  }
  16.43487669989223% {
    transform: translate(-0.6286248966134766%, 0.24203572229308246%);
  }
  18.260974110991363% {
    transform: translate(-0.7255748050551776%, 0.19222476328238103%);
  }
  20.0870715220905% {
    transform: translate(0.2895994698780049%, -0.39083360888183405%);
  }
  21.913168933189638% {
    transform: translate(0.23478916374007852%, 0.05466008559176716%);
  }
  23.739266344288772% {
    transform: translate(-0.8666083785889565%, -0.01670242504426045%);
  }
  25.56536375538791% {
    transform: translate(-0.8776065362572711%, 0.2301831017221656%);
  }
  27.391461166487044% {
    transform: translate(-0.7702971323108652%, 0.22734881831362364%);
  }
  29.217558577586182% {
    transform: translate(-0.18593959566309426%, -0.19997136350425038%);
  }
  31.04365598868532% {
    transform: translate(-0.5300359494491578%, -0.4708212057282737%);
  }
  32.86975339978446% {
    transform: translate(-0.8881365758784754%, 0.18058748872720787%);
  }
  34.69585081088359% {
    transform: translate(0.8627656232719634%, -0.3760510236336396%);
  }
  36.521948221982726% {
    transform: translate(0.6314783403657391%, 0.258766895774424%);
  }
  38.34804563308187% {
    transform: translate(-0.9938638041353554%, 0.2887600712052838%);
  }
  40.174143044181% {
    transform: translate(-0.9924326447555956%, -0.4251709160230155%);
  }
  42.000240455280135% {
    transform: translate(0.38282409572412535%, 0.03094210000584141%);
  }
  43.826337866379276% {
    transform: translate(0.9391090412357492%, -0.293864334420316%);
  }
  45.65243527747841% {
    transform: translate(0.9988685130792461%, -0.09588734227115414%);
  }
  47.478532688577545% {
    transform: translate(-0.9216772143874108%, -0.37424453475226227%);
  }
  49.30463009967668% {
    transform: translate(0.6635785091486825%, 0.06160729891534622%);
  }
  51.13072751077582% {
    transform: translate(0.9879790891551745%, 0.49381097642254335%);
  }
  52.956824921874954% {
    transform: translate(-0.4521784536442781%, 0.11184062288642749%);
  }
  54.78292233297409% {
    transform: translate(-0.9210527384273259%, 0.3962971511220297%);
  }
  56.60901974407323% {
    transform: translate(-0.5163381523393951%, 0.34242869131070885%);
  }
  58.435117155172364% {
    transform: translate(0.6169729574804261%, 0.04545850444031818%);
  }
  60.2612145662715% {
    transform: translate(0.8861350307385938%, -0.05872261048302363%);
  }
  62.08731197737064% {
    transform: translate(0.5596888719335755%, -0.05506518171199182%);
  }
  63.91340938846977% {
    transform: translate(-0.2263310353625405%, 0.04836805095233698%);
  }
  65.73950679956891% {
    transform: translate(0.9745683854874176%, 0.22465369541475044%);
  }
  67.56560421066804% {
    transform: translate(0.8234879191309168%, -0.37371558661301396%);
  }
  69.39170162176718% {
    transform: translate(-0.12225276846492728%, 0.2936981446724525%);
  }
  71.21779903286632% {
    transform: translate(-0.1371360225320135%, 0.25595514702498345%);
  }
  73.04389644396545% {
    transform: translate(0.8405967395990235%, 0.1516696870333789%);
  }
  74.86999385506459% {
    transform: translate(-0.00663299632288572%, 0.4739413413356164%);
  }
  76.69609126616373% {
    transform: translate(0.18020011613431564%, 0.46321411096494325%);
  }
  78.52218867726286% {
    transform: translate(0.08451698285620379%, 0.4584792298748819%);
  }
  80.348286088362% {
    transform: translate(0.17047474753674274%, 0.325455510926572%);
  }
  82.17438349946114% {
    transform: translate(-0.6389519193112241%, 0.4222581468033948%);
  }
  84.00048091056027% {
    transform: translate(-0.7897138960942072%, 0.37142338319673285%);
  }
  85.82657832165941% {
    transform: translate(0.6936478886861304%, -0.03191573171225093%);
  }
  87.65267573275855% {
    transform: translate(0.7777705905628212%, 0.05976475546292437%);
  }
  89.47877314385768% {
    transform: translate(0.37699314626018054%, 0.4101545624181251%);
  }
}

animation: rgbScrambleR 1s steps(1, jump-end) infinite alternate both;
`;

const fixedRgbScranbleG = css`
@keyframes rgbScrambleG {  
  0% {
    transform: translate(-0.8467541371967804%, 0.3768301851655613%);
  }
  1.6725848612068552% {
    transform: translate(-0.5313985868664548%, -0.10630503330767538%);
  }
  3.3451697224137105% {
    transform: translate(-0.6354779139125024%, 0.18391584113970372%);
  }
  5.017754583620565% {
    transform: translate(-0.5023394245121633%, -0.28391889856888763%);
  }
  6.690339444827421% {
    transform: translate(-0.5489804285124626%, -0.4977234534469497%);
  }
  8.362924306034277% {
    transform: translate(-0.12421148156871498%, 0.45326286764945567%);
  }
  10.03550916724113% {
    transform: translate(0.6717596817057516%, 0.3397874790415367%);
  }
  11.708094028447986% {
    transform: translate(-0.41142147002761353%, 0.23526610506983991%);
  }
  13.380678889654842% {
    transform: translate(0.30028064643215524%, -0.37283548952807477%);
  }
  15.053263750861698% {
    transform: translate(-0.7826167073173087%, -0.0565385469958497%);
  }
  16.725848612068553% {
    transform: translate(0.4095020856617446%, -0.22475174252697827%);
  }
  18.398433473275407% {
    transform: translate(0.8289759382882971%, -0.11349823390474367%);
  }
  20.07101833448226% {
    transform: translate(-0.023038635119744466%, -0.21675928333082184%);
  }
  21.74360319568912% {
    transform: translate(-0.9090718643966809%, -0.39789362577269616%);
  }
  23.416188056895972% {
    transform: translate(-0.4290737280817791%, 0.1756813525260159%);
  }
  25.08877291810283% {
    transform: translate(-0.8331358575130645%, -0.14240099389012761%);
  }
  26.761357779309684% {
    transform: translate(0.232001978330302%, -0.08589355078012773%);
  }
  28.433942640516538% {
    transform: translate(0.1102939785295658%, 0.3207236779971787%);
  }
  30.106527501723395% {
    transform: translate(-0.9209381732127611%, -0.06207625189579202%);
  }
  31.77911236293025% {
    transform: translate(0.5141240915240184%, -0.04144885916531793%);
  }
  33.451697224137106% {
    transform: translate(0.027275375850235317%, -0.23664203777059623%);
  }
  35.12428208534396% {
    transform: translate(0.966773088708456%, 0.32979994114758115%);
  }
  36.796866946550814% {
    transform: translate(0.8630129710286232%, -0.005153504802941633%);
  }
  38.46945180775767% {
    transform: translate(-0.6542175443768485%, -0.1568635677772896%);
  }
  40.14203666896452% {
    transform: translate(-0.38327379022102903%, -0.010212613143152138%);
  }
  41.81462153017138% {
    transform: translate(-0.5817613544837816%, 0.13014196312488058%);
  }
  43.48720639137824% {
    transform: translate(0.091177492824011%, -0.43762694064033547%);
  }
  45.159791252585094% {
    transform: translate(0.5555823475626034%, 0.20764058726028933%);
  }
  46.832376113791945% {
    transform: translate(0.6205319737457868%, 0.1157450563827307%);
  }
  48.5049609749988% {
    transform: translate(0.8536524172257391%, -0.04832434502133531%);
  }
  50.17754583620566% {
    transform: translate(-0.8583956837932329%, -0.1010894739917787%);
  }
  51.85013069741251% {
    transform: translate(0.041658149486933915%, 0.16752270313867945%);
  }
  53.52271555861937% {
    transform: translate(-0.5555650970604709%, 0.3751164013630395%);
  }
  55.195300419826225% {
    transform: translate(-0.11071523168027664%, -0.14410617445509777%);
  }
  56.867885281033075% {
    transform: translate(-0.8609909461635006%, 0.20079052155770305%);
  }
  58.54047014223993% {
    transform: translate(-0.1368437289793949%, -0.2923581710992156%);
  }
  60.21305500344679% {
    transform: translate(-0.8020932059487875%, -0.4759952824820515%);
  }
  61.88563986465364% {
    transform: translate(-0.22957050993387096%, 0.33297082107653986%);
  }
  63.5582247258605% {
    transform: translate(-0.9075117740212448%, 0.3054002601528316%);
  }
  65.23080958706736% {
    transform: translate(0.14231642317871573%, -0.2982900814482259%);
  }
  66.90339444827421% {
    transform: translate(0.3811056775609325%, 0.4192324170030708%);
  }
  68.57597930948107% {
    transform: translate(0.8233672855384153%, 0.13324506588572982%);
  }
  70.24856417068791% {
    transform: translate(-0.4425429616824519%, 0.33616082976431483%);
  }
  71.92114903189477% {
    transform: translate(0.15084815221355274%, 0.4351384239949214%);
  }
  73.59373389310163% {
    transform: translate(-0.34572382310339655%, -0.10398592346772695%);
  }
  75.26631875430849% {
    transform: translate(-0.8274511985639372%, 0.0012738644809051625%);
  }
  76.93890361551534% {
    transform: translate(-0.1730144027404017%, 0.09257441676767697%);
  }
  78.6114884767222% {
    transform: translate(-0.26102742460163153%, 0.07770888262994569%);
  }
  80.28407333792904% {
    transform: translate(0.08281690619977944%, -0.1493779119349048%);
  }
  81.9566581991359% {
    transform: translate(0.27237664305251474%, 0.27505746365424755%);
  }
}

animation: rgbScrambleG 1s steps(1, jump-end) infinite alternate both;
`;

const fixedRgbScranbleB = css`
@keyframes rgbScrambleB {
  0% {
    transform: translate(-0.008297909682067672%, 0.07194535402937774%);
  }
  4.2136794389195416% {
    transform: translate(0.7438135628404527%, -0.1481046568156017%);
  }
  8.427358877839083% {
    transform: translate(-0.24369671388443237%, -0.12168701272031424%);
  }
  12.641038316758625% {
    transform: translate(-0.4235262182830586%, -0.10557814784946995%);
  }
  16.854717755678166% {
    transform: translate(0.9114558339195358%, -0.2405225251585208%);
  }
  21.068397194597708% {
    transform: translate(0.06867390689736075%, 0.001245295146263592%);
  }
  25.28207663351725% {
    transform: translate(0.13209380996576225%, 0.19256694706193822%);
  }
  29.49575607243679% {
    transform: translate(-0.41729726344621065%, 0.3855124830345058%);
  }
  33.70943551135633% {
    transform: translate(-0.9640761197096941%, 0.00007264603735768205%);
  }
  37.923114950275874% {
    transform: translate(0.4480405429085792%, -0.40836737390686717%);
  }
  42.136794389195416% {
    transform: translate(0.031986275877661896%, -0.31686213726190093%);
  }
  46.35047382811496% {
    transform: translate(0.09895638219654845%, -0.023732083084912148%);
  }
  50.5641532670345% {
    transform: translate(-0.34918936524056177%, 0.3773617494073289%);
  }
  54.77783270595404% {
    transform: translate(-0.7295850354288382%, 0.3842417152408897%);
  }
  58.99151214487358% {
    transform: translate(-0.3239797146273693%, -0.465773971705542%);
  }
  63.20519158379312% {
    transform: translate(0.6283351314840844%, 0.14596289300970233%);
  }
  67.41887102271266% {
    transform: translate(-0.14323303792418507%, 0.21719473573681336%);
  }
  71.6325504616322% {
    transform: translate(0.7428908396103955%, 0.00022875169059455303%);
  }
  75.84622990055175% {
    transform: translate(-0.7558762429737707%, 0.3016914511288633%);
  }
  80.05990933947129% {
    transform: translate(0.6646659440283869%, 0.42560457664518037%);
  }
  84.27358877839083% {
    transform: translate(0.5185790020313283%, -0.061660126485109545%);
  }
  88.48726821731037% {
    transform: translate(-0.8208502189009836%, 0.4309229294479986%);
  }
  92.70094765622991% {
    transform: translate(-0.2833503158552806%, 0.2735157552790519%);
  }
  96.91462709514946% {
    transform: translate(-0.39025644613751487%, 0.230279886658586%);
  }
}

animation: rgbScrambleB 1s steps(1, jump-end) infinite alternate both;
`;

export {
  mediaDown,
  random,
  rgbScramble,
  glitch,
  fixedGlitchBefore,
  fixedGlitchAfter,
  fixedRgbScranbleR,
  fixedRgbScranbleG,
  fixedRgbScranbleB
};